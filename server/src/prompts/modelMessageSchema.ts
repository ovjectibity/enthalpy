const modelMessageSchema = {
  "type": "object",
  "properties": {
    "role": {
      "type": "string",
      "title": "Message role",
      "description": "The role describes whether this message content is generated by the user i.e. the Enthalpy app or whether it is generated by the assistant i.e. the LLM."
    },
    "messages": {
        "type": "array",
        "title": "Message array",
        "description": "This field is an array of messages of various types. Multiple messages may be included in this array, should be treated as a concurrent stream of ordered information.",
        "items": {
            "type": "object",
            "properties": {
                "userContent": {
                    "type": "string",
                    "title": "Content from and for the user",
                    "description": "**The interpretation of this field depends on who’s sending this message — you or me:**\n\n1. *When I’m sending the messages*, the content here is the message that the end user has sent and which I’m forwarding to you.\n2. *When you’re sending the message*, the content here is some message that you want to send to the end user."
                },
                "workflowContent": {
                    "title": "Workflow Content",
                    "description": "Interactions between the Enthalpy app & the LLM model.",
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "enum": ["output_to_user", "workflow_context", "workflow_instruction"],
                            "title": "Type of workflow message",
                            "description": "Type of workflow message — the interpretation of this field depends on who’s sending this message — you or me.\n\n**When I'm sending the messages, here’s what the `workflowMessage type` field means:**\n\n1. **output_to_user:** This is the message I have sent to the user by myself. Usually I would only be forwarding the messages you generate for the user via userContent messages, but at times I would be sending them messages and those interactions from me → user are captured via this workflow message type.\n2. **workflow_instruction:** This is some additional instruction that I have for you pertaining to the objective of workflow we’re currently pursuing. It is necessary that you take this context into account for any further tasks. It usually should be consistent with everything that has been said to you before but in case it is not, consider this be an overriding instruction mechanism that you should conform to.\n3. **workflow_context:** This is the gathered context pertaining to a workflow which adheres to a specific schema again as defined separately via a workflow_instruction message type from me to you. The gathered context in this case is some information that is provided by the user to me which aids the workflow. These are primarily used in workflows aimed at context gathering which is then used in a downstream workflow which requires this context.\n\n**When you’re sending the messages, here’s what the `workflowMessage type` field means:**\n\n1. **output_to_user:** This is not a valid field in this case. If you provide this, it will be ignored by me.\n2. **workflow_instruction:** This is not a valid field in this case. If you provide this, it will be ignored by me.\n3. **workflow_context:** This is some context you’ve gathered from the user via interacting with them directly which will aid us towards some goal. The gathered context is to be in a specific JSON format the schema for which will be shared with you via a `workflow_instruction` message type. Adhere to this schema strictly when sharing this message type. Add no other text."
                        },
                        "content": {
                            "type": "string",
                            "title": "Workflow message content",
                            "description": "Actual contents of the workflow message"
                        }
                    }
                } 
            }
        }
    },
    "required": ["role","messages"]
  }
}

export default {modelMessageSchema};